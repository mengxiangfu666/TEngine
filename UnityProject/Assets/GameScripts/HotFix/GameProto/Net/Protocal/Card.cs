// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: card.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
/// <summary>Holder for reflection information generated from card.proto</summary>
public static partial class CardReflection {

  #region Descriptor
  /// <summary>File descriptor for card.proto</summary>
  public static pbr::FileDescriptor Descriptor {
    get { return descriptor; }
  }
  private static pbr::FileDescriptor descriptor;

  static CardReflection() {
    byte[] descriptorData = global::System.Convert.FromBase64String(
        string.Concat(
          "CgpjYXJkLnByb3RvIq4BCgpCdXlDYXJkUmVxEhAKCGNhcmREYXRhGAEgASgJ",
          "EgsKA2V4cBgCIAEoBRINCgVsZXZlbBgDIAEoBRIOCgZwcm93ZXIYBCABKAUS",
          "LwoKY2hhbmdlSXRlbRgFIAMoCzIbLkJ1eUNhcmRSZXEuQ2hhbmdlSXRlbUVu",
          "dHJ5GjEKD0NoYW5nZUl0ZW1FbnRyeRILCgNrZXkYASABKAUSDQoFdmFsdWUY",
          "AiABKAU6AjgBIg0KC0J1eUNhcmRSZXNwImQKDkJ1eUZyZWVDYXJkUmVxEhAK",
          "CGNhcmREYXRhGAEgASgJEgsKA2V4cBgCIAEoBRINCgVsZXZlbBgDIAEoBRIO",
          "CgZwcm93ZXIYBCABKAUSFAoMc2hvcENhcmRUaW1lGAUgASgJIhEKD0J1eUZy",
          "ZWVDYXJkUmVzcCJLCgtTeW5jQ2FyZFJlcRIQCghjYXJkRGF0YRgBIAEoCRIL",
          "CgNleHAYAiABKAUSDQoFbGV2ZWwYAyABKAUSDgoGcHJvd2VyGAQgASgFIg4K",
          "DFN5bmNDYXJkUmVzcEIUCgpjb20uY2IubXNnQgZQQkNhcmRiBnByb3RvMw=="));
    descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
        new pbr::FileDescriptor[] { },
        new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
          new pbr::GeneratedClrTypeInfo(typeof(global::BuyCardReq), global::BuyCardReq.Parser, new[]{ "CardData", "Exp", "Level", "Prower", "ChangeItem" }, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
          new pbr::GeneratedClrTypeInfo(typeof(global::BuyCardResp), global::BuyCardResp.Parser, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::BuyFreeCardReq), global::BuyFreeCardReq.Parser, new[]{ "CardData", "Exp", "Level", "Prower", "ShopCardTime" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::BuyFreeCardResp), global::BuyFreeCardResp.Parser, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::SyncCardReq), global::SyncCardReq.Parser, new[]{ "CardData", "Exp", "Level", "Prower" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::SyncCardResp), global::SyncCardResp.Parser, null, null, null, null)
        }));
  }
  #endregion

}
#region Messages
/// <summary>
///商店购买卡牌
/// </summary>
public sealed partial class BuyCardReq : pb::IMessage<BuyCardReq> {
  private static readonly pb::MessageParser<BuyCardReq> _parser = new pb::MessageParser<BuyCardReq>(() => new BuyCardReq());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<BuyCardReq> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::CardReflection.Descriptor.MessageTypes[0]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public BuyCardReq() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public BuyCardReq(BuyCardReq other) : this() {
    cardData_ = other.cardData_;
    exp_ = other.exp_;
    level_ = other.level_;
    prower_ = other.prower_;
    changeItem_ = other.changeItem_.Clone();
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public BuyCardReq Clone() {
    return new BuyCardReq(this);
  }

  /// <summary>Field number for the "cardData" field.</summary>
  public const int CardDataFieldNumber = 1;
  private string cardData_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string CardData {
    get { return cardData_; }
    set {
      cardData_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "exp" field.</summary>
  public const int ExpFieldNumber = 2;
  private int exp_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Exp {
    get { return exp_; }
    set {
      exp_ = value;
    }
  }

  /// <summary>Field number for the "level" field.</summary>
  public const int LevelFieldNumber = 3;
  private int level_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Level {
    get { return level_; }
    set {
      level_ = value;
    }
  }

  /// <summary>Field number for the "prower" field.</summary>
  public const int ProwerFieldNumber = 4;
  private int prower_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Prower {
    get { return prower_; }
    set {
      prower_ = value;
    }
  }

  /// <summary>Field number for the "changeItem" field.</summary>
  public const int ChangeItemFieldNumber = 5;
  private static readonly pbc::MapField<int, int>.Codec _map_changeItem_codec
      = new pbc::MapField<int, int>.Codec(pb::FieldCodec.ForInt32(8), pb::FieldCodec.ForInt32(16), 42);
  private readonly pbc::MapField<int, int> changeItem_ = new pbc::MapField<int, int>();
  /// <summary>
  ///改变的道具，客户端维护道具
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::MapField<int, int> ChangeItem {
    get { return changeItem_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as BuyCardReq);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(BuyCardReq other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (CardData != other.CardData) return false;
    if (Exp != other.Exp) return false;
    if (Level != other.Level) return false;
    if (Prower != other.Prower) return false;
    if (!ChangeItem.Equals(other.ChangeItem)) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (CardData.Length != 0) hash ^= CardData.GetHashCode();
    if (Exp != 0) hash ^= Exp.GetHashCode();
    if (Level != 0) hash ^= Level.GetHashCode();
    if (Prower != 0) hash ^= Prower.GetHashCode();
    hash ^= ChangeItem.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (CardData.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(CardData);
    }
    if (Exp != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(Exp);
    }
    if (Level != 0) {
      output.WriteRawTag(24);
      output.WriteInt32(Level);
    }
    if (Prower != 0) {
      output.WriteRawTag(32);
      output.WriteInt32(Prower);
    }
    changeItem_.WriteTo(output, _map_changeItem_codec);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (CardData.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(CardData);
    }
    if (Exp != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Exp);
    }
    if (Level != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Level);
    }
    if (Prower != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Prower);
    }
    size += changeItem_.CalculateSize(_map_changeItem_codec);
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(BuyCardReq other) {
    if (other == null) {
      return;
    }
    if (other.CardData.Length != 0) {
      CardData = other.CardData;
    }
    if (other.Exp != 0) {
      Exp = other.Exp;
    }
    if (other.Level != 0) {
      Level = other.Level;
    }
    if (other.Prower != 0) {
      Prower = other.Prower;
    }
    changeItem_.Add(other.changeItem_);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 10: {
          CardData = input.ReadString();
          break;
        }
        case 16: {
          Exp = input.ReadInt32();
          break;
        }
        case 24: {
          Level = input.ReadInt32();
          break;
        }
        case 32: {
          Prower = input.ReadInt32();
          break;
        }
        case 42: {
          changeItem_.AddEntriesFrom(input, _map_changeItem_codec);
          break;
        }
      }
    }
  }

}

public sealed partial class BuyCardResp : pb::IMessage<BuyCardResp> {
  private static readonly pb::MessageParser<BuyCardResp> _parser = new pb::MessageParser<BuyCardResp>(() => new BuyCardResp());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<BuyCardResp> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::CardReflection.Descriptor.MessageTypes[1]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public BuyCardResp() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public BuyCardResp(BuyCardResp other) : this() {
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public BuyCardResp Clone() {
    return new BuyCardResp(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as BuyCardResp);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(BuyCardResp other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(BuyCardResp other) {
    if (other == null) {
      return;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
      }
    }
  }

}

/// <summary>
///商店免费购买卡牌
/// </summary>
public sealed partial class BuyFreeCardReq : pb::IMessage<BuyFreeCardReq> {
  private static readonly pb::MessageParser<BuyFreeCardReq> _parser = new pb::MessageParser<BuyFreeCardReq>(() => new BuyFreeCardReq());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<BuyFreeCardReq> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::CardReflection.Descriptor.MessageTypes[2]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public BuyFreeCardReq() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public BuyFreeCardReq(BuyFreeCardReq other) : this() {
    cardData_ = other.cardData_;
    exp_ = other.exp_;
    level_ = other.level_;
    prower_ = other.prower_;
    shopCardTime_ = other.shopCardTime_;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public BuyFreeCardReq Clone() {
    return new BuyFreeCardReq(this);
  }

  /// <summary>Field number for the "cardData" field.</summary>
  public const int CardDataFieldNumber = 1;
  private string cardData_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string CardData {
    get { return cardData_; }
    set {
      cardData_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "exp" field.</summary>
  public const int ExpFieldNumber = 2;
  private int exp_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Exp {
    get { return exp_; }
    set {
      exp_ = value;
    }
  }

  /// <summary>Field number for the "level" field.</summary>
  public const int LevelFieldNumber = 3;
  private int level_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Level {
    get { return level_; }
    set {
      level_ = value;
    }
  }

  /// <summary>Field number for the "prower" field.</summary>
  public const int ProwerFieldNumber = 4;
  private int prower_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Prower {
    get { return prower_; }
    set {
      prower_ = value;
    }
  }

  /// <summary>Field number for the "shopCardTime" field.</summary>
  public const int ShopCardTimeFieldNumber = 5;
  private string shopCardTime_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string ShopCardTime {
    get { return shopCardTime_; }
    set {
      shopCardTime_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as BuyFreeCardReq);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(BuyFreeCardReq other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (CardData != other.CardData) return false;
    if (Exp != other.Exp) return false;
    if (Level != other.Level) return false;
    if (Prower != other.Prower) return false;
    if (ShopCardTime != other.ShopCardTime) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (CardData.Length != 0) hash ^= CardData.GetHashCode();
    if (Exp != 0) hash ^= Exp.GetHashCode();
    if (Level != 0) hash ^= Level.GetHashCode();
    if (Prower != 0) hash ^= Prower.GetHashCode();
    if (ShopCardTime.Length != 0) hash ^= ShopCardTime.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (CardData.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(CardData);
    }
    if (Exp != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(Exp);
    }
    if (Level != 0) {
      output.WriteRawTag(24);
      output.WriteInt32(Level);
    }
    if (Prower != 0) {
      output.WriteRawTag(32);
      output.WriteInt32(Prower);
    }
    if (ShopCardTime.Length != 0) {
      output.WriteRawTag(42);
      output.WriteString(ShopCardTime);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (CardData.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(CardData);
    }
    if (Exp != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Exp);
    }
    if (Level != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Level);
    }
    if (Prower != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Prower);
    }
    if (ShopCardTime.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(ShopCardTime);
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(BuyFreeCardReq other) {
    if (other == null) {
      return;
    }
    if (other.CardData.Length != 0) {
      CardData = other.CardData;
    }
    if (other.Exp != 0) {
      Exp = other.Exp;
    }
    if (other.Level != 0) {
      Level = other.Level;
    }
    if (other.Prower != 0) {
      Prower = other.Prower;
    }
    if (other.ShopCardTime.Length != 0) {
      ShopCardTime = other.ShopCardTime;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 10: {
          CardData = input.ReadString();
          break;
        }
        case 16: {
          Exp = input.ReadInt32();
          break;
        }
        case 24: {
          Level = input.ReadInt32();
          break;
        }
        case 32: {
          Prower = input.ReadInt32();
          break;
        }
        case 42: {
          ShopCardTime = input.ReadString();
          break;
        }
      }
    }
  }

}

public sealed partial class BuyFreeCardResp : pb::IMessage<BuyFreeCardResp> {
  private static readonly pb::MessageParser<BuyFreeCardResp> _parser = new pb::MessageParser<BuyFreeCardResp>(() => new BuyFreeCardResp());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<BuyFreeCardResp> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::CardReflection.Descriptor.MessageTypes[3]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public BuyFreeCardResp() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public BuyFreeCardResp(BuyFreeCardResp other) : this() {
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public BuyFreeCardResp Clone() {
    return new BuyFreeCardResp(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as BuyFreeCardResp);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(BuyFreeCardResp other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(BuyFreeCardResp other) {
    if (other == null) {
      return;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
      }
    }
  }

}

/// <summary>
///同步卡牌
/// </summary>
public sealed partial class SyncCardReq : pb::IMessage<SyncCardReq> {
  private static readonly pb::MessageParser<SyncCardReq> _parser = new pb::MessageParser<SyncCardReq>(() => new SyncCardReq());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<SyncCardReq> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::CardReflection.Descriptor.MessageTypes[4]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public SyncCardReq() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public SyncCardReq(SyncCardReq other) : this() {
    cardData_ = other.cardData_;
    exp_ = other.exp_;
    level_ = other.level_;
    prower_ = other.prower_;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public SyncCardReq Clone() {
    return new SyncCardReq(this);
  }

  /// <summary>Field number for the "cardData" field.</summary>
  public const int CardDataFieldNumber = 1;
  private string cardData_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string CardData {
    get { return cardData_; }
    set {
      cardData_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "exp" field.</summary>
  public const int ExpFieldNumber = 2;
  private int exp_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Exp {
    get { return exp_; }
    set {
      exp_ = value;
    }
  }

  /// <summary>Field number for the "level" field.</summary>
  public const int LevelFieldNumber = 3;
  private int level_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Level {
    get { return level_; }
    set {
      level_ = value;
    }
  }

  /// <summary>Field number for the "prower" field.</summary>
  public const int ProwerFieldNumber = 4;
  private int prower_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Prower {
    get { return prower_; }
    set {
      prower_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as SyncCardReq);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(SyncCardReq other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (CardData != other.CardData) return false;
    if (Exp != other.Exp) return false;
    if (Level != other.Level) return false;
    if (Prower != other.Prower) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (CardData.Length != 0) hash ^= CardData.GetHashCode();
    if (Exp != 0) hash ^= Exp.GetHashCode();
    if (Level != 0) hash ^= Level.GetHashCode();
    if (Prower != 0) hash ^= Prower.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (CardData.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(CardData);
    }
    if (Exp != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(Exp);
    }
    if (Level != 0) {
      output.WriteRawTag(24);
      output.WriteInt32(Level);
    }
    if (Prower != 0) {
      output.WriteRawTag(32);
      output.WriteInt32(Prower);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (CardData.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(CardData);
    }
    if (Exp != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Exp);
    }
    if (Level != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Level);
    }
    if (Prower != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Prower);
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(SyncCardReq other) {
    if (other == null) {
      return;
    }
    if (other.CardData.Length != 0) {
      CardData = other.CardData;
    }
    if (other.Exp != 0) {
      Exp = other.Exp;
    }
    if (other.Level != 0) {
      Level = other.Level;
    }
    if (other.Prower != 0) {
      Prower = other.Prower;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 10: {
          CardData = input.ReadString();
          break;
        }
        case 16: {
          Exp = input.ReadInt32();
          break;
        }
        case 24: {
          Level = input.ReadInt32();
          break;
        }
        case 32: {
          Prower = input.ReadInt32();
          break;
        }
      }
    }
  }

}

public sealed partial class SyncCardResp : pb::IMessage<SyncCardResp> {
  private static readonly pb::MessageParser<SyncCardResp> _parser = new pb::MessageParser<SyncCardResp>(() => new SyncCardResp());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<SyncCardResp> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::CardReflection.Descriptor.MessageTypes[5]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public SyncCardResp() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public SyncCardResp(SyncCardResp other) : this() {
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public SyncCardResp Clone() {
    return new SyncCardResp(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as SyncCardResp);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(SyncCardResp other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(SyncCardResp other) {
    if (other == null) {
      return;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
      }
    }
  }

}

#endregion


#endregion Designer generated code
