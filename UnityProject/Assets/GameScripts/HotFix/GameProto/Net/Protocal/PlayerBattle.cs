// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: playerBattle.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
/// <summary>Holder for reflection information generated from playerBattle.proto</summary>
public static partial class PlayerBattleReflection {

  #region Descriptor
  /// <summary>File descriptor for playerBattle.proto</summary>
  public static pbr::FileDescriptor Descriptor {
    get { return descriptor; }
  }
  private static pbr::FileDescriptor descriptor;

  static PlayerBattleReflection() {
    byte[] descriptorData = global::System.Convert.FromBase64String(
        string.Concat(
          "ChJwbGF5ZXJCYXR0bGUucHJvdG8aCmJlYW4ucHJvdG8i+QEKCkJ1eUhlcm9S",
          "ZXESLQoRZm9ybWF0aW9uRGF0YUxpc3QYASABKAsyEi5Gb3JtYXRpb25EYXRh",
          "TGlzdBIjCgxoZXJvRGF0YUxpc3QYAiABKAsyDS5IZXJvRGF0YUxpc3QSFgoO",
          "dG90YWxIZXJvQ291bnQYAyABKAUSCwoDZXhwGAQgASgFEg4KBnByb3dlchgF",
          "IAEoBRIvCgpjaGFuZ2VJdGVtGAYgAygLMhsuQnV5SGVyb1JlcS5DaGFuZ2VJ",
          "dGVtRW50cnkaMQoPQ2hhbmdlSXRlbUVudHJ5EgsKA2tleRgBIAEoBRINCgV2",
          "YWx1ZRgCIAEoBToCOAEiDQoLQnV5SGVyb1Jlc3AicwoNSGVyb1VwU3RhclJl",
          "cRItChFmb3JtYXRpb25EYXRhTGlzdBgBIAEoCzISLkZvcm1hdGlvbkRhdGFM",
          "aXN0EiMKDGhlcm9EYXRhTGlzdBgCIAEoCzINLkhlcm9EYXRhTGlzdBIOCgZw",
          "cm93ZXIYAyABKAUiEAoOSGVyb1VwU3RhclJlc3AiUQoQU3luY0Zvcm1hdGlv",
          "blJlcRItChFmb3JtYXRpb25EYXRhTGlzdBgBIAEoCzISLkZvcm1hdGlvbkRh",
          "dGFMaXN0Eg4KBnByb3dlchgCIAEoBSITChFTeW5jRm9ybWF0aW9uUmVzcCJP",
          "CgtTeW5jSGVyb1JlcRIjCgxoZXJvRGF0YUxpc3QYASABKAsyDS5IZXJvRGF0",
          "YUxpc3QSCwoDZXhwGAIgASgFEg4KBnByb3dlchgDIAEoBSIOCgxTeW5jSGVy",
          "b1Jlc3AinQEKDVVubG9ja01pbmVSZXESJQoNc3RvbmVEYXRhTGlzdBgBIAEo",
          "CzIOLlN0b25lRGF0YUxpc3QSMgoKY2hhbmdlSXRlbRgCIAMoCzIeLlVubG9j",
          "a01pbmVSZXEuQ2hhbmdlSXRlbUVudHJ5GjEKD0NoYW5nZUl0ZW1FbnRyeRIL",
          "CgNrZXkYASABKAUSDQoFdmFsdWUYAiABKAU6AjgBIhAKDlVubG9ja01pbmVS",
          "ZXNwIp0BCg1NaW5lUmV3YXJkUmVxEiUKDXN0b25lRGF0YUxpc3QYASABKAsy",
          "Di5TdG9uZURhdGFMaXN0EjIKCmNoYW5nZUl0ZW0YAiADKAsyHi5NaW5lUmV3",
          "YXJkUmVxLkNoYW5nZUl0ZW1FbnRyeRoxCg9DaGFuZ2VJdGVtRW50cnkSCwoD",
          "a2V5GAEgASgFEg0KBXZhbHVlGAIgASgFOgI4ASIQCg5NaW5lUmV3YXJkUmVz",
          "cEIcCgpjb20uY2IubXNnQg5QQlBsYXllckJhdHRsZWIGcHJvdG8z"));
    descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
        new pbr::FileDescriptor[] { global::BeanReflection.Descriptor, },
        new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
          new pbr::GeneratedClrTypeInfo(typeof(global::BuyHeroReq), global::BuyHeroReq.Parser, new[]{ "FormationDataList", "HeroDataList", "TotalHeroCount", "Exp", "Prower", "ChangeItem" }, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
          new pbr::GeneratedClrTypeInfo(typeof(global::BuyHeroResp), global::BuyHeroResp.Parser, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::HeroUpStarReq), global::HeroUpStarReq.Parser, new[]{ "FormationDataList", "HeroDataList", "Prower" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::HeroUpStarResp), global::HeroUpStarResp.Parser, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::SyncFormationReq), global::SyncFormationReq.Parser, new[]{ "FormationDataList", "Prower" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::SyncFormationResp), global::SyncFormationResp.Parser, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::SyncHeroReq), global::SyncHeroReq.Parser, new[]{ "HeroDataList", "Exp", "Prower" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::SyncHeroResp), global::SyncHeroResp.Parser, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::UnlockMineReq), global::UnlockMineReq.Parser, new[]{ "StoneDataList", "ChangeItem" }, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
          new pbr::GeneratedClrTypeInfo(typeof(global::UnlockMineResp), global::UnlockMineResp.Parser, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::MineRewardReq), global::MineRewardReq.Parser, new[]{ "StoneDataList", "ChangeItem" }, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
          new pbr::GeneratedClrTypeInfo(typeof(global::MineRewardResp), global::MineRewardResp.Parser, null, null, null, null)
        }));
  }
  #endregion

}
#region Messages
/// <summary>
///商店购买英雄
/// </summary>
public sealed partial class BuyHeroReq : pb::IMessage<BuyHeroReq> {
  private static readonly pb::MessageParser<BuyHeroReq> _parser = new pb::MessageParser<BuyHeroReq>(() => new BuyHeroReq());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<BuyHeroReq> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::PlayerBattleReflection.Descriptor.MessageTypes[0]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public BuyHeroReq() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public BuyHeroReq(BuyHeroReq other) : this() {
    FormationDataList = other.formationDataList_ != null ? other.FormationDataList.Clone() : null;
    HeroDataList = other.heroDataList_ != null ? other.HeroDataList.Clone() : null;
    totalHeroCount_ = other.totalHeroCount_;
    exp_ = other.exp_;
    prower_ = other.prower_;
    changeItem_ = other.changeItem_.Clone();
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public BuyHeroReq Clone() {
    return new BuyHeroReq(this);
  }

  /// <summary>Field number for the "formationDataList" field.</summary>
  public const int FormationDataListFieldNumber = 1;
  private global::FormationDataList formationDataList_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::FormationDataList FormationDataList {
    get { return formationDataList_; }
    set {
      formationDataList_ = value;
    }
  }

  /// <summary>Field number for the "heroDataList" field.</summary>
  public const int HeroDataListFieldNumber = 2;
  private global::HeroDataList heroDataList_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::HeroDataList HeroDataList {
    get { return heroDataList_; }
    set {
      heroDataList_ = value;
    }
  }

  /// <summary>Field number for the "totalHeroCount" field.</summary>
  public const int TotalHeroCountFieldNumber = 3;
  private int totalHeroCount_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int TotalHeroCount {
    get { return totalHeroCount_; }
    set {
      totalHeroCount_ = value;
    }
  }

  /// <summary>Field number for the "exp" field.</summary>
  public const int ExpFieldNumber = 4;
  private int exp_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Exp {
    get { return exp_; }
    set {
      exp_ = value;
    }
  }

  /// <summary>Field number for the "prower" field.</summary>
  public const int ProwerFieldNumber = 5;
  private int prower_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Prower {
    get { return prower_; }
    set {
      prower_ = value;
    }
  }

  /// <summary>Field number for the "changeItem" field.</summary>
  public const int ChangeItemFieldNumber = 6;
  private static readonly pbc::MapField<int, int>.Codec _map_changeItem_codec
      = new pbc::MapField<int, int>.Codec(pb::FieldCodec.ForInt32(8), pb::FieldCodec.ForInt32(16), 50);
  private readonly pbc::MapField<int, int> changeItem_ = new pbc::MapField<int, int>();
  /// <summary>
  ///改变的道具，客户端维护道具
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::MapField<int, int> ChangeItem {
    get { return changeItem_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as BuyHeroReq);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(BuyHeroReq other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!object.Equals(FormationDataList, other.FormationDataList)) return false;
    if (!object.Equals(HeroDataList, other.HeroDataList)) return false;
    if (TotalHeroCount != other.TotalHeroCount) return false;
    if (Exp != other.Exp) return false;
    if (Prower != other.Prower) return false;
    if (!ChangeItem.Equals(other.ChangeItem)) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (formationDataList_ != null) hash ^= FormationDataList.GetHashCode();
    if (heroDataList_ != null) hash ^= HeroDataList.GetHashCode();
    if (TotalHeroCount != 0) hash ^= TotalHeroCount.GetHashCode();
    if (Exp != 0) hash ^= Exp.GetHashCode();
    if (Prower != 0) hash ^= Prower.GetHashCode();
    hash ^= ChangeItem.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (formationDataList_ != null) {
      output.WriteRawTag(10);
      output.WriteMessage(FormationDataList);
    }
    if (heroDataList_ != null) {
      output.WriteRawTag(18);
      output.WriteMessage(HeroDataList);
    }
    if (TotalHeroCount != 0) {
      output.WriteRawTag(24);
      output.WriteInt32(TotalHeroCount);
    }
    if (Exp != 0) {
      output.WriteRawTag(32);
      output.WriteInt32(Exp);
    }
    if (Prower != 0) {
      output.WriteRawTag(40);
      output.WriteInt32(Prower);
    }
    changeItem_.WriteTo(output, _map_changeItem_codec);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (formationDataList_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(FormationDataList);
    }
    if (heroDataList_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(HeroDataList);
    }
    if (TotalHeroCount != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(TotalHeroCount);
    }
    if (Exp != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Exp);
    }
    if (Prower != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Prower);
    }
    size += changeItem_.CalculateSize(_map_changeItem_codec);
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(BuyHeroReq other) {
    if (other == null) {
      return;
    }
    if (other.formationDataList_ != null) {
      if (formationDataList_ == null) {
        formationDataList_ = new global::FormationDataList();
      }
      FormationDataList.MergeFrom(other.FormationDataList);
    }
    if (other.heroDataList_ != null) {
      if (heroDataList_ == null) {
        heroDataList_ = new global::HeroDataList();
      }
      HeroDataList.MergeFrom(other.HeroDataList);
    }
    if (other.TotalHeroCount != 0) {
      TotalHeroCount = other.TotalHeroCount;
    }
    if (other.Exp != 0) {
      Exp = other.Exp;
    }
    if (other.Prower != 0) {
      Prower = other.Prower;
    }
    changeItem_.Add(other.changeItem_);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 10: {
          if (formationDataList_ == null) {
            formationDataList_ = new global::FormationDataList();
          }
          input.ReadMessage(formationDataList_);
          break;
        }
        case 18: {
          if (heroDataList_ == null) {
            heroDataList_ = new global::HeroDataList();
          }
          input.ReadMessage(heroDataList_);
          break;
        }
        case 24: {
          TotalHeroCount = input.ReadInt32();
          break;
        }
        case 32: {
          Exp = input.ReadInt32();
          break;
        }
        case 40: {
          Prower = input.ReadInt32();
          break;
        }
        case 50: {
          changeItem_.AddEntriesFrom(input, _map_changeItem_codec);
          break;
        }
      }
    }
  }

}

public sealed partial class BuyHeroResp : pb::IMessage<BuyHeroResp> {
  private static readonly pb::MessageParser<BuyHeroResp> _parser = new pb::MessageParser<BuyHeroResp>(() => new BuyHeroResp());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<BuyHeroResp> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::PlayerBattleReflection.Descriptor.MessageTypes[1]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public BuyHeroResp() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public BuyHeroResp(BuyHeroResp other) : this() {
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public BuyHeroResp Clone() {
    return new BuyHeroResp(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as BuyHeroResp);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(BuyHeroResp other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(BuyHeroResp other) {
    if (other == null) {
      return;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
      }
    }
  }

}

/// <summary>
///英雄升星
/// </summary>
public sealed partial class HeroUpStarReq : pb::IMessage<HeroUpStarReq> {
  private static readonly pb::MessageParser<HeroUpStarReq> _parser = new pb::MessageParser<HeroUpStarReq>(() => new HeroUpStarReq());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<HeroUpStarReq> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::PlayerBattleReflection.Descriptor.MessageTypes[2]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public HeroUpStarReq() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public HeroUpStarReq(HeroUpStarReq other) : this() {
    FormationDataList = other.formationDataList_ != null ? other.FormationDataList.Clone() : null;
    HeroDataList = other.heroDataList_ != null ? other.HeroDataList.Clone() : null;
    prower_ = other.prower_;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public HeroUpStarReq Clone() {
    return new HeroUpStarReq(this);
  }

  /// <summary>Field number for the "formationDataList" field.</summary>
  public const int FormationDataListFieldNumber = 1;
  private global::FormationDataList formationDataList_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::FormationDataList FormationDataList {
    get { return formationDataList_; }
    set {
      formationDataList_ = value;
    }
  }

  /// <summary>Field number for the "heroDataList" field.</summary>
  public const int HeroDataListFieldNumber = 2;
  private global::HeroDataList heroDataList_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::HeroDataList HeroDataList {
    get { return heroDataList_; }
    set {
      heroDataList_ = value;
    }
  }

  /// <summary>Field number for the "prower" field.</summary>
  public const int ProwerFieldNumber = 3;
  private int prower_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Prower {
    get { return prower_; }
    set {
      prower_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as HeroUpStarReq);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(HeroUpStarReq other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!object.Equals(FormationDataList, other.FormationDataList)) return false;
    if (!object.Equals(HeroDataList, other.HeroDataList)) return false;
    if (Prower != other.Prower) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (formationDataList_ != null) hash ^= FormationDataList.GetHashCode();
    if (heroDataList_ != null) hash ^= HeroDataList.GetHashCode();
    if (Prower != 0) hash ^= Prower.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (formationDataList_ != null) {
      output.WriteRawTag(10);
      output.WriteMessage(FormationDataList);
    }
    if (heroDataList_ != null) {
      output.WriteRawTag(18);
      output.WriteMessage(HeroDataList);
    }
    if (Prower != 0) {
      output.WriteRawTag(24);
      output.WriteInt32(Prower);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (formationDataList_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(FormationDataList);
    }
    if (heroDataList_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(HeroDataList);
    }
    if (Prower != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Prower);
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(HeroUpStarReq other) {
    if (other == null) {
      return;
    }
    if (other.formationDataList_ != null) {
      if (formationDataList_ == null) {
        formationDataList_ = new global::FormationDataList();
      }
      FormationDataList.MergeFrom(other.FormationDataList);
    }
    if (other.heroDataList_ != null) {
      if (heroDataList_ == null) {
        heroDataList_ = new global::HeroDataList();
      }
      HeroDataList.MergeFrom(other.HeroDataList);
    }
    if (other.Prower != 0) {
      Prower = other.Prower;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 10: {
          if (formationDataList_ == null) {
            formationDataList_ = new global::FormationDataList();
          }
          input.ReadMessage(formationDataList_);
          break;
        }
        case 18: {
          if (heroDataList_ == null) {
            heroDataList_ = new global::HeroDataList();
          }
          input.ReadMessage(heroDataList_);
          break;
        }
        case 24: {
          Prower = input.ReadInt32();
          break;
        }
      }
    }
  }

}

public sealed partial class HeroUpStarResp : pb::IMessage<HeroUpStarResp> {
  private static readonly pb::MessageParser<HeroUpStarResp> _parser = new pb::MessageParser<HeroUpStarResp>(() => new HeroUpStarResp());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<HeroUpStarResp> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::PlayerBattleReflection.Descriptor.MessageTypes[3]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public HeroUpStarResp() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public HeroUpStarResp(HeroUpStarResp other) : this() {
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public HeroUpStarResp Clone() {
    return new HeroUpStarResp(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as HeroUpStarResp);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(HeroUpStarResp other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(HeroUpStarResp other) {
    if (other == null) {
      return;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
      }
    }
  }

}

/// <summary>
///同步布阵
/// </summary>
public sealed partial class SyncFormationReq : pb::IMessage<SyncFormationReq> {
  private static readonly pb::MessageParser<SyncFormationReq> _parser = new pb::MessageParser<SyncFormationReq>(() => new SyncFormationReq());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<SyncFormationReq> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::PlayerBattleReflection.Descriptor.MessageTypes[4]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public SyncFormationReq() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public SyncFormationReq(SyncFormationReq other) : this() {
    FormationDataList = other.formationDataList_ != null ? other.FormationDataList.Clone() : null;
    prower_ = other.prower_;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public SyncFormationReq Clone() {
    return new SyncFormationReq(this);
  }

  /// <summary>Field number for the "formationDataList" field.</summary>
  public const int FormationDataListFieldNumber = 1;
  private global::FormationDataList formationDataList_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::FormationDataList FormationDataList {
    get { return formationDataList_; }
    set {
      formationDataList_ = value;
    }
  }

  /// <summary>Field number for the "prower" field.</summary>
  public const int ProwerFieldNumber = 2;
  private int prower_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Prower {
    get { return prower_; }
    set {
      prower_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as SyncFormationReq);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(SyncFormationReq other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!object.Equals(FormationDataList, other.FormationDataList)) return false;
    if (Prower != other.Prower) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (formationDataList_ != null) hash ^= FormationDataList.GetHashCode();
    if (Prower != 0) hash ^= Prower.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (formationDataList_ != null) {
      output.WriteRawTag(10);
      output.WriteMessage(FormationDataList);
    }
    if (Prower != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(Prower);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (formationDataList_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(FormationDataList);
    }
    if (Prower != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Prower);
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(SyncFormationReq other) {
    if (other == null) {
      return;
    }
    if (other.formationDataList_ != null) {
      if (formationDataList_ == null) {
        formationDataList_ = new global::FormationDataList();
      }
      FormationDataList.MergeFrom(other.FormationDataList);
    }
    if (other.Prower != 0) {
      Prower = other.Prower;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 10: {
          if (formationDataList_ == null) {
            formationDataList_ = new global::FormationDataList();
          }
          input.ReadMessage(formationDataList_);
          break;
        }
        case 16: {
          Prower = input.ReadInt32();
          break;
        }
      }
    }
  }

}

public sealed partial class SyncFormationResp : pb::IMessage<SyncFormationResp> {
  private static readonly pb::MessageParser<SyncFormationResp> _parser = new pb::MessageParser<SyncFormationResp>(() => new SyncFormationResp());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<SyncFormationResp> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::PlayerBattleReflection.Descriptor.MessageTypes[5]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public SyncFormationResp() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public SyncFormationResp(SyncFormationResp other) : this() {
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public SyncFormationResp Clone() {
    return new SyncFormationResp(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as SyncFormationResp);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(SyncFormationResp other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(SyncFormationResp other) {
    if (other == null) {
      return;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
      }
    }
  }

}

/// <summary>
///同步英雄
/// </summary>
public sealed partial class SyncHeroReq : pb::IMessage<SyncHeroReq> {
  private static readonly pb::MessageParser<SyncHeroReq> _parser = new pb::MessageParser<SyncHeroReq>(() => new SyncHeroReq());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<SyncHeroReq> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::PlayerBattleReflection.Descriptor.MessageTypes[6]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public SyncHeroReq() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public SyncHeroReq(SyncHeroReq other) : this() {
    HeroDataList = other.heroDataList_ != null ? other.HeroDataList.Clone() : null;
    exp_ = other.exp_;
    prower_ = other.prower_;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public SyncHeroReq Clone() {
    return new SyncHeroReq(this);
  }

  /// <summary>Field number for the "heroDataList" field.</summary>
  public const int HeroDataListFieldNumber = 1;
  private global::HeroDataList heroDataList_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::HeroDataList HeroDataList {
    get { return heroDataList_; }
    set {
      heroDataList_ = value;
    }
  }

  /// <summary>Field number for the "exp" field.</summary>
  public const int ExpFieldNumber = 2;
  private int exp_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Exp {
    get { return exp_; }
    set {
      exp_ = value;
    }
  }

  /// <summary>Field number for the "prower" field.</summary>
  public const int ProwerFieldNumber = 3;
  private int prower_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Prower {
    get { return prower_; }
    set {
      prower_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as SyncHeroReq);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(SyncHeroReq other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!object.Equals(HeroDataList, other.HeroDataList)) return false;
    if (Exp != other.Exp) return false;
    if (Prower != other.Prower) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (heroDataList_ != null) hash ^= HeroDataList.GetHashCode();
    if (Exp != 0) hash ^= Exp.GetHashCode();
    if (Prower != 0) hash ^= Prower.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (heroDataList_ != null) {
      output.WriteRawTag(10);
      output.WriteMessage(HeroDataList);
    }
    if (Exp != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(Exp);
    }
    if (Prower != 0) {
      output.WriteRawTag(24);
      output.WriteInt32(Prower);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (heroDataList_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(HeroDataList);
    }
    if (Exp != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Exp);
    }
    if (Prower != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Prower);
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(SyncHeroReq other) {
    if (other == null) {
      return;
    }
    if (other.heroDataList_ != null) {
      if (heroDataList_ == null) {
        heroDataList_ = new global::HeroDataList();
      }
      HeroDataList.MergeFrom(other.HeroDataList);
    }
    if (other.Exp != 0) {
      Exp = other.Exp;
    }
    if (other.Prower != 0) {
      Prower = other.Prower;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 10: {
          if (heroDataList_ == null) {
            heroDataList_ = new global::HeroDataList();
          }
          input.ReadMessage(heroDataList_);
          break;
        }
        case 16: {
          Exp = input.ReadInt32();
          break;
        }
        case 24: {
          Prower = input.ReadInt32();
          break;
        }
      }
    }
  }

}

public sealed partial class SyncHeroResp : pb::IMessage<SyncHeroResp> {
  private static readonly pb::MessageParser<SyncHeroResp> _parser = new pb::MessageParser<SyncHeroResp>(() => new SyncHeroResp());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<SyncHeroResp> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::PlayerBattleReflection.Descriptor.MessageTypes[7]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public SyncHeroResp() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public SyncHeroResp(SyncHeroResp other) : this() {
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public SyncHeroResp Clone() {
    return new SyncHeroResp(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as SyncHeroResp);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(SyncHeroResp other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(SyncHeroResp other) {
    if (other == null) {
      return;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
      }
    }
  }

}

/// <summary>
///解锁stone为mine
/// </summary>
public sealed partial class UnlockMineReq : pb::IMessage<UnlockMineReq> {
  private static readonly pb::MessageParser<UnlockMineReq> _parser = new pb::MessageParser<UnlockMineReq>(() => new UnlockMineReq());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<UnlockMineReq> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::PlayerBattleReflection.Descriptor.MessageTypes[8]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public UnlockMineReq() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public UnlockMineReq(UnlockMineReq other) : this() {
    StoneDataList = other.stoneDataList_ != null ? other.StoneDataList.Clone() : null;
    changeItem_ = other.changeItem_.Clone();
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public UnlockMineReq Clone() {
    return new UnlockMineReq(this);
  }

  /// <summary>Field number for the "stoneDataList" field.</summary>
  public const int StoneDataListFieldNumber = 1;
  private global::StoneDataList stoneDataList_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::StoneDataList StoneDataList {
    get { return stoneDataList_; }
    set {
      stoneDataList_ = value;
    }
  }

  /// <summary>Field number for the "changeItem" field.</summary>
  public const int ChangeItemFieldNumber = 2;
  private static readonly pbc::MapField<int, int>.Codec _map_changeItem_codec
      = new pbc::MapField<int, int>.Codec(pb::FieldCodec.ForInt32(8), pb::FieldCodec.ForInt32(16), 18);
  private readonly pbc::MapField<int, int> changeItem_ = new pbc::MapField<int, int>();
  /// <summary>
  ///改变的道具，客户端维护道具
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::MapField<int, int> ChangeItem {
    get { return changeItem_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as UnlockMineReq);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(UnlockMineReq other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!object.Equals(StoneDataList, other.StoneDataList)) return false;
    if (!ChangeItem.Equals(other.ChangeItem)) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (stoneDataList_ != null) hash ^= StoneDataList.GetHashCode();
    hash ^= ChangeItem.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (stoneDataList_ != null) {
      output.WriteRawTag(10);
      output.WriteMessage(StoneDataList);
    }
    changeItem_.WriteTo(output, _map_changeItem_codec);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (stoneDataList_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(StoneDataList);
    }
    size += changeItem_.CalculateSize(_map_changeItem_codec);
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(UnlockMineReq other) {
    if (other == null) {
      return;
    }
    if (other.stoneDataList_ != null) {
      if (stoneDataList_ == null) {
        stoneDataList_ = new global::StoneDataList();
      }
      StoneDataList.MergeFrom(other.StoneDataList);
    }
    changeItem_.Add(other.changeItem_);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 10: {
          if (stoneDataList_ == null) {
            stoneDataList_ = new global::StoneDataList();
          }
          input.ReadMessage(stoneDataList_);
          break;
        }
        case 18: {
          changeItem_.AddEntriesFrom(input, _map_changeItem_codec);
          break;
        }
      }
    }
  }

}

public sealed partial class UnlockMineResp : pb::IMessage<UnlockMineResp> {
  private static readonly pb::MessageParser<UnlockMineResp> _parser = new pb::MessageParser<UnlockMineResp>(() => new UnlockMineResp());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<UnlockMineResp> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::PlayerBattleReflection.Descriptor.MessageTypes[9]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public UnlockMineResp() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public UnlockMineResp(UnlockMineResp other) : this() {
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public UnlockMineResp Clone() {
    return new UnlockMineResp(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as UnlockMineResp);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(UnlockMineResp other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(UnlockMineResp other) {
    if (other == null) {
      return;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
      }
    }
  }

}

/// <summary>
///获取mine奖励
/// </summary>
public sealed partial class MineRewardReq : pb::IMessage<MineRewardReq> {
  private static readonly pb::MessageParser<MineRewardReq> _parser = new pb::MessageParser<MineRewardReq>(() => new MineRewardReq());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<MineRewardReq> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::PlayerBattleReflection.Descriptor.MessageTypes[10]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MineRewardReq() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MineRewardReq(MineRewardReq other) : this() {
    StoneDataList = other.stoneDataList_ != null ? other.StoneDataList.Clone() : null;
    changeItem_ = other.changeItem_.Clone();
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MineRewardReq Clone() {
    return new MineRewardReq(this);
  }

  /// <summary>Field number for the "stoneDataList" field.</summary>
  public const int StoneDataListFieldNumber = 1;
  private global::StoneDataList stoneDataList_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::StoneDataList StoneDataList {
    get { return stoneDataList_; }
    set {
      stoneDataList_ = value;
    }
  }

  /// <summary>Field number for the "changeItem" field.</summary>
  public const int ChangeItemFieldNumber = 2;
  private static readonly pbc::MapField<int, int>.Codec _map_changeItem_codec
      = new pbc::MapField<int, int>.Codec(pb::FieldCodec.ForInt32(8), pb::FieldCodec.ForInt32(16), 18);
  private readonly pbc::MapField<int, int> changeItem_ = new pbc::MapField<int, int>();
  /// <summary>
  ///改变的道具，客户端维护道具
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::MapField<int, int> ChangeItem {
    get { return changeItem_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as MineRewardReq);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(MineRewardReq other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!object.Equals(StoneDataList, other.StoneDataList)) return false;
    if (!ChangeItem.Equals(other.ChangeItem)) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (stoneDataList_ != null) hash ^= StoneDataList.GetHashCode();
    hash ^= ChangeItem.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (stoneDataList_ != null) {
      output.WriteRawTag(10);
      output.WriteMessage(StoneDataList);
    }
    changeItem_.WriteTo(output, _map_changeItem_codec);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (stoneDataList_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(StoneDataList);
    }
    size += changeItem_.CalculateSize(_map_changeItem_codec);
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(MineRewardReq other) {
    if (other == null) {
      return;
    }
    if (other.stoneDataList_ != null) {
      if (stoneDataList_ == null) {
        stoneDataList_ = new global::StoneDataList();
      }
      StoneDataList.MergeFrom(other.StoneDataList);
    }
    changeItem_.Add(other.changeItem_);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 10: {
          if (stoneDataList_ == null) {
            stoneDataList_ = new global::StoneDataList();
          }
          input.ReadMessage(stoneDataList_);
          break;
        }
        case 18: {
          changeItem_.AddEntriesFrom(input, _map_changeItem_codec);
          break;
        }
      }
    }
  }

}

public sealed partial class MineRewardResp : pb::IMessage<MineRewardResp> {
  private static readonly pb::MessageParser<MineRewardResp> _parser = new pb::MessageParser<MineRewardResp>(() => new MineRewardResp());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<MineRewardResp> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::PlayerBattleReflection.Descriptor.MessageTypes[11]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MineRewardResp() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MineRewardResp(MineRewardResp other) : this() {
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MineRewardResp Clone() {
    return new MineRewardResp(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as MineRewardResp);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(MineRewardResp other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(MineRewardResp other) {
    if (other == null) {
      return;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
      }
    }
  }

}

#endregion


#endregion Designer generated code
